<一>	开发相关平台以及编译环境（Msys2/mobaxterm/云桌面(top-viewer)等）
1	云桌面（top-viewer集成工具）
1.1	登录网址：http://10.30.10.25:8080/#/login	<租户名：disktop 用户名：向超1		密码：123456>？云桌面->windows10			
												<租户名：bsystem 用户名：xiang_chao	密码：123456>？ubantu19.10     
												xc_top/10.162(Golang/Utf-8无效，vim不正常)-----> cat /etc/resolv.conf
																	# Generated by NetworkManager
																	nameserver 223.5.5.5 
												xiang/10.199(FreeRdp/Golang)
												https://www.cnblogs.com/yiyi20120822/p/11652612.html linux环境安装Go
1.2	登录网址：http://10.30.10.34:8080/#/login	<租户名：disktop 用户名：bsystem	密码：bsystem <新集群信息>
												<租户名：disktop 用户名：disktop	密码：disktop <云桌面新集群信息>
												
1.3	登录网址：http://10.30.33.25:8080/#/pages/compute/desktop  <租户名：system 用户名：admin	密码：admin <终端-云桌面集群信息>
												
												
2	mobaxterm工具----->linux虚拟环境
2.1	远程终端建立linux与windonws之间的数据共享，通过SSH等其他远程连接方式绑定IP/当前用户名
2.1.1	共享文件夹（在desktop与bsystem之间共享）
		<1>	将虚拟化的物理机(desktop)具体文件数据挂载在bsystem,构建数据共享管道	"//10.30.62.107/Users/tophc/Documents/Mywork####desktop####	/root/mywork####bsystem####"
		mount -t cifs //10.30.62.107/Users/tophc/Documents/Mywork /root/mywork -o username=tophc,password=123456,vers=2.0
		//10.30.61.138
		//-o username=A3458,password=Man19970207,vers=2.0
		https://blog.csdn.net/a1424261303/article/details/82428605 参考文档
		<2>	Linux df 命令查看共享文件夹
		https://www.cnblogs.com/csxf/p/3624762.html
		
2.1.2 MOboxTerm虚拟环境
	MOboxTerm(带virsh环境)
	usr:10.30.10.82
	ps:root/TopHCS@6666

	MOboxTerm(不带virsh环境)
	usr:10.30.10.97
	ps:root/root(196045/Man19970207)
	
	//ssh命令行打开spice连接地址（宿主机地址）
	ssh root@10.30.10.15:5920
	password:TopHCS@6666
	grep用法：(具体命令) |grep (具体命令对应的参数)
		
3	Msys2工具----->windows虚拟环境
3.1	参考2处的用途即可

4	git代码提交工具(git账号：Man-1997-02-07 Man19970207)------->(git远程仓库名称：git   密码：root   全名：Xtophc@Man    房间号：root)   (adp-platform)http://192.168.201.240  xiang_chao 12345678
https://note.youdao.com/ynoteshare1/index.html?id=364406ea95859d28d1354deefa14e848&type=note  （参考1）
https://www.cnblogs.com/springbarley/archive/2012/11/03/2752984.html （参考2）
4.1 git配置用户名邮箱，全局配置/单仓库配置
https://www.cnblogs.com/xxoome/p/9183515.html
4.2 创建本地分支并切换
git checkout -b bugfix origin/bugfix
4.2 本地上传远程仓库
<1> 如果本地忘记git pull,git add /git commit /git push(会有冲突错误产生，提示需要git pull,提交新文件时，需要git status一下，看看当前文件的状态)
<2>  git pull,按正常流程上传

4.3 查看指定用户的git提交记录
git log --author=username

4.4 virsh命令来创建虚拟机步骤_banwh的博客-CSDN博客
https://blog.csdn.net/u010713300/article/details/103125012?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param
4.5 libvirt官方文档
https://wiki.libvirt.org/page/Main_Page

	Golang基础
https://github.com/unknwon/the-way-to-go_ZH_CN/blob/master/eBook/directory.md

	Gdb调试
https://blog.csdn.net/niyaozuozuihao/article/details/91802994
https://www.jb51.net/article/36393.htm

	gdb调试golang程序入门及gdb命令列表
https://cloud.tencent.com/developer/article/1428644

5	编译及生成目标环境执行文件------>spice远程桌面协议
/adp/spice-protocol------->协议
./configure
make -j4//自定义选择
make install

/adp/spice-gtk------->继承glib封装的接口库
meson builddir
cd builddir 
ninja -j4
ninja install


/adp/virt-viewer------->生成目标文件的项目工程（top-viewer/top-viewer.exe）
./configure --with-spice-gtk --without-gtk-vnc --without-ovirt --without-libvirt
make -j4//自定义选择
make install

6	virt-viewer已优化以及待优化的问题点
一：命令行参数解析
1.单独执行可执行文件，链接指定终端ip/port窗口输入
{
<1>解决输入单个字符'-'，出现卡屏的现象
<2>解决输入字段"spice:以及不带port"，出现显示带【USB/选项/帮助】下拉工具栏的空屏，而且工具栏菜单控件都未置灰
}
2.执行可执行文件，命令行参数输入
{
<1>解决输入字段"spice:以及不带port"，出现显示带【USB/选项/帮助】下拉工具栏的空屏，而且工具栏菜单控件都未置灰（已经优化添加提示窗口！）
****ip/port都输入，并优化密码登录优化提示窗口***
}
3.中文乱码virt-viewer
{
<1>linux19.10版本的环境下，窗口空间的中文标题显示正常，其他控件的中文标题显示乱码(printf打印显示正常！！！)，新增接口API函数，已经优化解决！
<2>msys2 win环境下，窗口空间的中文标题显示正常，其他控件的中文标题显示正常(printf打印显示乱码！！！)，水印中文字段加斜体部分字段乱码，未解决，暂时屏蔽该斜体选项！
}

熟悉开发环境以及spice工作日志
2020.09.08~2020.09.11
办理入职相关手续，熟悉开发相关平台以及编译环境（Msys2/mobaxterm/云桌面top-viewer等）
2020.09.14～2020.09.18
学习spice-gtk以及熟悉virt-viewer开源项目的相关代码以及编译开发过程
2020.09.21～2020.09.25
继续熟悉virt-viewer开源项目的相关代码，并优化解决部分问题
如下：
一：命令行参数解析
1.单独执行可执行文件，链接指定终端ip/port窗口输入
{
<1>解决输入单个字符'-'，出现卡屏的现象
<2>解决输入字段"spice:以及不带port"，出现显示带【USB/选项/帮助】下拉工具栏的空屏，而且工具栏菜单控件都未置灰
}
2.执行可执行文件，命令行参数输入
{
<1>解决输入字段"spice:以及不带port"，出现显示带【USB/选项/帮助】下拉工具栏的空屏，而且工具栏菜单控件都未置灰（已经优化添加提示窗口！）
****ip/port都输入，并优化密码登录优化提示窗口***
}
3.中文乱码virt-viewer
{
<1>linux19.10版本的环境下，窗口空间的中文标题显示正常，其他控件的中文标题显示乱码(printf打印显示正常！！！)，新增接口API函数，已经优化解决！
<2>msys2 win环境下，窗口空间的中文标题显示正常，其他控件的中文标题显示正常(printf打印显示乱码！！！)，水印中文字段加斜体部分字段乱码，未解决，暂时屏蔽该斜体选项！
}
2020.09.27～2020.09.30
1.基于Gsteam音视频插件（还在一边熟悉）
2.Ubuntu下编译安装运行FreeRdp连接Windows（例子下下来，环境已经配好，可以远程，windows环境还在编译，未完成）


FreRdp工作日志
2020.10.09～2020.10.10
根据FreeRdp开源项目的相关技术文档，熟悉该项目的架构资源组成以及相关内容。具体包含如下所示：
1. FreeRdp源码包(freerdp-2.2.0)
2. libusb包(libusb-1.0.23)
libusb：usb通信

3. openssl包(openssl-OpenSSL_1_1_1h)
libcrypto：加密算法库
libssl：加密模块应用库，实现了ssl及tls

4.openh264包(openh264-2.1.1)
libopenh264：音视频编解码库

5.opencl(增强图像渲染等)

2020.10.12～2020.10.16
搭建Linux环境，查找相关编译xfreerdp可执行程序的数据资源，根据官网已有的相关资源库合成可执行程序，进行相关具体功能测试，对比spice协议的top-viewer可执行程序，有明显的差别，分析得出官网的相关资源库版本比较旧，后续又重新自己搭建环境编译！(具体总结的linux本地编译文档，记录在FreeRdp编译文档里面)

2020.10.19～2020.10.23
继续完善Linux编译下搭建的环境，重新把本地编译的相关资源库链接到xfreerdp可执行程序中，测试效果有了明显的改变，已完成对linux环境编译的相关测试和核实！（具体问题还是自己搭建环境出现了问题，最终和同事之间讨论后，得到了解决的办法。）

2020.10.26～2020.10.30
搭建windows环境,查找相关编译wfreerdp可执行程序的数据文档。因为windows支持音视频播放重定向，具体可以到达两个比较显著的效果，一：远程桌面播放视频的时候，CPU占用率会降低到15%左右。二：拉起wfreerdp客户端的物理机会开始使用GPU，对音视频开始拉起使用率。
具体设置远程桌面的Windows音视频重定向功能的操作如下：
1.音视频播放重定向设置步骤
提升播放流畅度及性能，降低服务器资源消耗，提升虚拟机部署密度。
Win+R组合键，在打开的运行窗口中输入命令gpedit.msc（mmc添加计算机策略）
展开本地计算机策略。
展开计算机配置。
展开策略。
展开管理模板。
展开 Windows 组件。
展开远程桌面服务。
在“设备和资源重定向”中，启用允许音频和视频播放重定向。
重新启动虚拟机。
(具体总结的linux本地编译文档，记录在FreeRdp编译文档里面)


2020.11.02～2020.11.06
1. 目前已经完成windows本地配置环境以及打包wfreerdp.exe,但用media player播放暂未将虚拟机cpu使用降到15个点之下,播放流畅度不高
2. 正在分析wfreerdp.exe出现的具体问题，考虑到跟本地编译的libcrypto与libssl，以及libopenh264的相关资源库，正在重新核对官网已编译好的源码库数据，对比一下具体结果，再做具体分析！

2020.11.09～2020.11.13
1. 已经将官网编译好的源码库，重新编译到wfreerdp. exe中，发现在VS2019编译生成以及链接依赖库的时候设置成了debug输出，导致播放不流畅，已更改输出为release,播放流畅度提高很多，但是使用msysy2查看ldd wfreerdp. exe发现没有链接到相关的openh64(dll)动态库资源，其他DLL库都正常可以链接(依赖)到资源！
2. 目前正在配合凯铭一起处理具体问题,libopenh264(dll)无法链接到wfreerdp.exe的问题。
3. 我现在也在进一步学习freerdp的具体源码，熟悉他的164组命令行功能参数，当RDP客户端和RD会话主机服务器之间存在远程桌面协议（RDP）连接时，会频繁重定向数据和资源。此重定向允许RD会话主机服务器访问RDP客户端上的资源，以及允许RD会话主机服务器将数据从RD会话主机服务器上远程应用重定向到RDP客户端。重定向功能的一些示例包括：键盘，鼠标和触摸输入，打印机作业，媒体播放器内容，文件系统数据，剪贴板，智能卡等

2020.11.16~11.20
一：音视频重定向功能，因为没有虚拟机的cpu消耗未达到15%以下（目前是30~45），物理机的GPU也没有看到消耗【之前已经分析了，openh264.lib/dll都没有链接到wfreerdp.exe,暂时不分析】
二：分析源码，对整个命令行参数解析做了一下梳理，优化了登录提示
<1>之前源项目命令行直接执行wfreerdp.exe会直接退出程序，没有提示
处理结果：新增自定义命令行参数输入窗口（远程连接的主机(虚拟机)用户名/密码/ip），如果参数都不输入会弹出相关的消息提醒弹窗，可以重复输入（修改）参数
发现：如果远程连接的主机(虚拟机)当前状态为休眠/待定/关机，都无法启动远程连接
<2>目前在分析任意文件（普通文件/文件夹/图片/压缩包）拖拽
发现：远程连接的主机(虚拟机)开启剪贴板重定向，可以实现任意文件复制和剪切(文件夹不需要压缩打包，优于spice)
待优化：参考spice文件拖拽功能开发

2020.11.23~11.27
一：分析源码，核对剪粘板重定向，音频输入/输出重定向，USB重定向以及全屏切换等功能特性
<1>已完成的可用功能：剪粘板重定向(+clipboard)，音频输入/输出重定向(/sound)，全屏切换(/f)[快捷键CTRL+ALT+ENTER]
1.1	剪粘板重定向：通过客户端输入快捷键（ctrl+c/z）复制剪切任意类型文件（文件夹不需要压缩），粘贴至云服务器桌面即可
待优化：反之操作，粘贴至客户端桌面的单一文件（默认为空），文件夹文件（内部文件组织结构不变，具体到文件都为空），准备后期屏蔽掉这个功能项！
1.2	音频输入/输出重定向
已完成！
1.3	全屏切换(/f)[快捷键CTRL+ALT+ENTER]
待优化：打开全屏，云服务器桌面直接盖住了客户端桌面，而且快捷键CTRL+ALT+ENTER无效，快捷键CTRL+alt+delete打开任务管理器,默认先启动客户端桌面，云服务器桌面被盖住！
1.4	新增的自定义登录窗口和远程桌面的程序是独立的两个程序，需要优化合并到同一个程序中

<2>待开发的功能：USB重定向/透传，视频重定向
2.1 USB重定向/透传：目前传入这两个参数【/usb:id,dev:0930:6545】【/usb:id:0930:6545#4669:6e6b,addr:04:0c （主要是#4669:6e6b,addr:04:0c）没分析出】
1.但是通过命令行参数结合代码调试，都会打印出：平台不支持libusb热插拔。 稍后将无法检测到插入的USB设备。
2.代码运行至udev_init(Get HUB handle)弹出客户端的当前USB设备文件夹目录
3.准备对比一下WINDOWS的mstsc设置相关的USB重定向！

2020.11.30~12.04
一：新增的自定义登录窗口和远程桌面的程序是独立的两个程序，已经完成优化合并到同一个程序中
二：整理了FreeRdp常规登录-操作手册（测试案例文档）以及FreeRdp新增代码内容
三：分析源码，优化全屏切换功能参数以及测试对比WINDOWS的mstsc设置相关的USB重定向
四：待开发的功能：USB重定向/透传，视频重定向

2020.12.07~12.11
1.完成了FreeRdp的两个版本（windows_wfreerdp.exe/linux_xfreerdp）的本地编译环境的搭建和功能测试以及相关优化
2.核对并测试mstsc与FreeRdp的具体功能差异
(一)：全屏切换正常（Ctrl_Alt_Break）,FreeRdp切换不成功(Ctrl_Alt_Enter)，待优化
(二)：音视频重定向正常(服务端设置相关重定向参数),FreeRdp音频重定向正常、视频重定向不成功(服务端设置相关重定向参数以及命令行参数输入)
(三)：剪贴板重定向正常(开启就双向都正常工作，关闭就双向都禁用),FreeRdp(开启只能实现客户端到服务端，服务端到客户端数据都被清空了。关闭就双向都禁用)
(四)：驱动器重定向正常(服务端设置相关重定向参数),FreeRdp未实现成功。
(五)：USB重定向操作流程：【目前win10家庭版和企业版,都没有成功！】
https://blog.csdn.net/zj371561267/article/details/106397948
RemoteFX 中USB重定向功能_解决windows宿主机本地USB设备映射到远程桌面使用
(六)：目前远程连接云桌面服务端(10.30.10.51/tophc/123456)，都是正常，但是自己本地创建的桌面服务端以及克隆的桌面(10.30.10.187/Xtopsec/123456)、(10.30.10.147/Xtophc/123456)--------->mstsc连接出错，FreeRdp连接正常<-----------

2020.12.14~12.18~12.23
请假8天

2020.12.24~12.25
1.分析源码，优化mstsc与FreeRdp的具体功能差异（全屏切换、视频重定向、驱动器重定向、USB重定向）

2020.12.28~12.31
1.分析源码，优化mstsc与FreeRdp的具体功能差异（全屏切换、####视频重定向####、驱动器重定向、USB重定向）

2021.01.04~01.08
1.分析并学习音视频编解码
2.搭建APK编译环境

2021.01.11~01.16
1.搭建APK编译环境，整理并上传Afreerdp-APK编译流程（目前执行脚本时出现错误，待解决后编译出相关环境所需的SO文件，就可以导入项目生成APK文件）
2.分析virt-viewer源码模块，优化当前出现的问题

2021.01.18~01.23
1.分析virt-viewer源码模块，优化当前出现的问题
<1>新增自定义个性化水印设置
<2>分析了相关按钮的消息事件绑定处理

2021.01.25~01.29
1.分析virt-viewer源码模块，优化当前出现的问题
<1>已经优化并测试了自定义水印位置，可以实现实时设置以及命令行设置
<2>目前已经优化关于对话框，虚拟机详情对话框，USB重定向和设置分辨率的对话框还在处理
